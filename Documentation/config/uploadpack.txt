uploadpack.hideRefs::
	This variable is the same as `transfer.hideRefs`, but applies
	only to `upload-pack` (and so affects only fetches, not pushes).
+
This can be used in some setups to reduce the size of the ref
advertisement, see also `protocol.version` for using a protocol
version that allows them to be filtered by the client.
+
In earlier versions of Git attempts to fetch an object pointed to by a
hidden ref would fail, this is no longer the case. See
`uploadpack.allowAnySHA1InWant`.

uploadpack.allowTipSHA1InWant::
	Depreacted. Used to allow `upload-pack` to accept a fetch
	request that asked for an object at the tip of a hidden
	ref. Now always `true`. See `uploadpack.allowAnySHA1InWant`
	below for details.

uploadpack.allowReachableSHA1InWant::
	Depreacted. Used to allow `upload-pack` to accept a fetch
	request that asked for an object that was reachable from any
	ref tip. Now always `true`. See
	`uploadpack.allowAnySHA1InWant` below for details.

uploadpack.allowAnySHA1InWant::
	Deprecated. Before Git version 2.21 the
	`uploadpack.allow{Tip,Any,Reachable}SHA1InWant` settings were
	`false` by default. Now they're unconditionally `true`, which
	means fetch request that ask for any object in the object
	store will be accepted, regardless of whether such an object
	is at the tip of a ref, reachable by no ref etc.
+
The reason for the change in default is as noted in the "SECURITY"
section of linkgit:git-fetch[1] a determined client can get to any
previously forbidden objects the server has access to by manipulating
the client/server dialog. If you host objects that should be kept
secret from some clients it's best to keep them in a separate
repository.

uploadpack.keepAlive::
	When `upload-pack` has started `pack-objects`, there may be a
	quiet period while `pack-objects` prepares the pack. Normally
	it would output progress information, but if `--quiet` was used
	for the fetch, `pack-objects` will output nothing at all until
	the pack data begins. Some clients and networks may consider
	the server to be hung and give up. Setting this option instructs
	`upload-pack` to send an empty keepalive packet every
	`uploadpack.keepAlive` seconds. Setting this option to 0
	disables keepalive packets entirely. The default is 5 seconds.

uploadpack.packObjectsHook::
	If this option is set, when `upload-pack` would run
	`git pack-objects` to create a packfile for a client, it will
	run this shell command instead.  The `pack-objects` command and
	arguments it _would_ have run (including the `git pack-objects`
	at the beginning) are appended to the shell command. The stdin
	and stdout of the hook are treated as if `pack-objects` itself
	was run. I.e., `upload-pack` will feed input intended for
	`pack-objects` to the hook, and expects a completed packfile on
	stdout.
+
Note that this configuration variable is ignored if it is seen in the
repository-level config (this is a safety measure against fetching from
untrusted repositories).

uploadpack.allowFilter::
	If this option is set, `upload-pack` will support partial
	clone and partial fetch object filtering.

uploadpack.allowRefInWant::
	If this option is set, `upload-pack` will support the `ref-in-want`
	feature of the protocol version 2 `fetch` command.  This feature
	is intended for the benefit of load-balanced servers which may
	not have the same view of what OIDs their refs point to due to
	replication delay.
